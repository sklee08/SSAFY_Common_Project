<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.test.Recruit">
<!-- 
	<select id="selectAll" resultType="recruitpjt">
	select a.pid, a.title, a.contents, a.endDate, a.makeDay, a.changeDay,a.makeId,a.changeId, b.pjtName
	from recruit as a, project as b
	where a.pid = b.pid;
	</select>
	 -->
	
	<select id="selectAll"  resultType="recruitpjt">
	<!-- 
	select a.rnum,a.pid, a.title,a.contents,a.endDate,a.makeDay,a.changeDay,a.makeId,a.changeId, a.pjtName, b.cnt, b.pjtMemberCnt
	from
	(
		select a.rnum, a.pid, a.title, a.contents, a.endDate, a.makeDay, a.changeDay,a.makeId,a.changeId, b.pjtName
		from recruit as a, project as b
		where a.pid = b.pid
	) as a,
	(
		select a.cnt, a.pid, pjtMemberCnt
		from project,
		(
			select count(*) as cnt, pid
			from pmember
			group by pid
		) as a
		where a.pid = project.pid
	) as b
	where a.pid = b.pid
	order by a.rnum desc;
	-->
			select a.*, b.cnt
        from
        (
		select a.cnt, a.pid, pjtMemberCnt
		from project,
		(
			select count(*) as cnt, pid
			from pmember
			group by pid
		) as a
		where a.pid = project.pid
        ) as b,
(
select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest
 		from recruit as r left join project as p
 		on r.pid = p.pid
 		left join pinterest as pi
 		on r.pid = pi.pid
        ) as a
        where a.pid = b.pid
		order by a.rnum desc;
	</select>
	
	
	<select id="selectAllLater" parameterType="two" resultType="recruitpjt">
	<!-- 
	select a.rnum,a.pid, a.title,a.contents,a.endDate,a.makeDay,a.changeDay,a.makeId,a.changeId, a.pjtName, b.cnt, b.pjtMemberCnt
	from
	(
		select a.rnum, a.pid, a.title, a.contents, a.endDate, a.makeDay, a.changeDay,a.makeId,a.changeId, b.pjtName
		from recruit as a, project as b
		where a.pid = b.pid
	) as a,
	(
		select a.cnt, a.pid, pjtMemberCnt
		from project,
		(
			select count(*) as cnt, pid
			from pmember
			group by pid
		) as a
		where a.pid = project.pid
	) as b
	where a.pid = b.pid
	order by a.rnum desc;
	-->
			select a.*, b.cnt
        from
        (
		select a.cnt, a.pid, pjtMemberCnt
		from project,
		(
			select count(*) as cnt, pid
			from pmember
			group by pid
		) as a
		where a.pid = project.pid
        ) as b,
(
select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest
 		from recruit as r left join project as p
 		on r.pid = p.pid
 		left join pinterest as pi
 		on r.pid = pi.pid
        ) as a
        where a.pid = b.pid
		order by a.rnum desc
		limit #{first}, #{second};
	</select>
	
	<select id="selectAllRecruitPjtPinterest"  resultType="recruitpjtpinterest">
		select a.*, b.cnt, b.nickname from(
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid;
	<!-- 
	select distinct a.cnt, b.*
		from project,
		(
			select count(*) as cnt, pid
			from pmember
			group by pid
		) as a,
		(
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
        r.makeDay, r.changeDay, r.makeId, r.changeId,
        p.pjtName, pi.interest, p.pjtMemberCnt, p.pjtContent, p.location, p.state
 		from recruit as r left join project as p
 		on r.pid = p.pid
 		left join pinterest as pi
 		on r.pid = pi.pid
        ) as b
        where a.pid = b.pid
		order by b.rnum desc;
        -->
        <!-- 원본 
        select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest
 		from recruit as r left join project as p
 		on r.pid = p.pid
 		left join pinterest as pi
 		on r.pid = pi.pid
 		order by rnum;
        
        
        
        -->
		
	</select>


	<select id="selectAllRecruitPjtPinterestLimit" parameterType="two" resultType="recruitpjtpinterest">
	
		select distinct a.cnt, b.*
		from project,
		(
			select count(*) as cnt, pid
			from pmember
			group by pid
		) as a,
		(
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
        r.makeDay, r.changeDay, r.makeId, r.changeId, 
        p.pjtName, pi.interest, p.pjtMemberCnt
 		from recruit as r left join project as p
 		on r.pid = p.pid
 		left join pinterest as pi
 		on r.pid = pi.pid
        ) as b
        where a.pid = b.pid
		order by b.rnum desc
		limit #{first}, #{second};
		
	</select>


	<select id="selectByAddr" resultType="recruitpjtpinterest"
		parameterType="addr">
		select distinct a.* from 
		(select a.*, b.cnt, b.nickname from(		
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid) as a right join (
		
		
		select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest 
		from recruit as r
		left
		join project as p
		on r.pid = p.pid
		left join pinterest as pi
		on r.pid = pi.pid
		where p.location like
		CONCAT('%',#{sido},'%')
		and p.location like CONCAT('%',#{gugun},'%')
		and p.location like CONCAT('%',#{dong},'%')
		<!-- order by r.rnum desc -->
        <!-- limit #{paging}, #{pcnt};  -->
        ) as b
        on a.pid = b.pid
        order by a.rnum desc;

	</select>
	
	<select id="selectByAddrWriter" resultType="recruitpjtpinterest"
		parameterType="searchparameter">
		select distinct a.* from 
		(select a.*, b.cnt, b.nickname from(		
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid) as a right join (
		
		
		select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest 
		from recruit as r
		left
		join project as p
		on r.pid = p.pid
		left join pinterest as pi
		on r.pid = pi.pid
		where p.location like
		CONCAT('%',#{sido},'%')
		and p.location like CONCAT('%',#{gugun},'%')
		and p.location like CONCAT('%',#{dong},'%')
		and r.makeId like CONCAT('%', #{keyword}, '%')
        <!-- limit #{paging}, #{pcnt};  -->
		<!-- order by r.rnum desc-->
		) as b
        on a.pid = b.pid
        order by a.rnum desc;
		

	</select>
	
	<select id="selectByAddrTitle" resultType="recruitpjtpinterest"
		parameterType="searchparameter">
		select distinct a.* from 
		(select a.*, b.cnt, b.nickname from(		
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid) as a right join (
		
		
		select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest
		from recruit as r
		left
		join project as p
		on r.pid = p.pid
		left join pinterest as pi
		on r.pid = pi.pid
		where p.location like
		CONCAT('%',#{sido},'%')
		and p.location like CONCAT('%',#{gugun},'%')
		and p.location like CONCAT('%',#{dong},'%')
		and r.title like CONCAT('%', #{keyword}, '%')
        <!-- limit #{paging}, #{pcnt};  -->
		<!-- order by r.rnum desc-->
		) as b
        on a.pid = b.pid
        order by a.rnum desc;
		

	</select>

	<select id="selectAllByWriter" resultType="recruitpjtpinterest"
		parameterType="searchparameter">
		
		select distinct a.* from 
		(select a.*, b.cnt, b.nickname from(		
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid) as a right join (
		
		
		
		select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest
		from recruit as r
		left
		join project as p
		on r.pid = p.pid
		left join pinterest as pi
		on r.pid = pi.pid
		where p.location like
		CONCAT('%',#{sido},'%')
		and p.location like CONCAT('%',#{gugun},'%')
		and p.location like CONCAT('%',#{dong},'%')
		and r.makeId like CONCAT('%', #{keyword}, '%')
		and r.pid in (
		select pid
		from (
		select *
		from pinterest
		where interest in
		(#{tag1},#{tag2},#{tag3},#{tag4},#{tag5})
		) as p
		group by pid
		having
		count(interest) >= #{cnt}
		)
        <!-- limit #{paging}, #{pcnt};  -->
		<!-- order by r.rnum desc-->
		) as b
        on a.pid = b.pid
        order by a.rnum desc;
	</select>

	<select id="selectAllByTitle" resultType="recruitpjtpinterest"
		parameterType="searchparameter">
		select distinct a.* from 
		(select a.*, b.cnt, b.nickname from(		
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid) as a right join (
		
		
		select r.rnum, r.pid, r.title, r.contents, r.endDate, r.makeDay, r.changeDay, r.makeId, r.changeId, p.pjtName, pi.interest
		from recruit as r
		left
		join
		project as p
		on r.pid =
		p.pid
		left join pinterest as pi
		on r.pid = pi.pid
		where p.location like
		CONCAT('%',#{sido},'%')
		and p.location like
		CONCAT('%',#{gugun},'%')
		and
		p.location like CONCAT('%',#{dong},'%')
		and r.title like CONCAT('%', #{keyword},
		'%')
		and r.pid in (
		select pid
		from (
		select *
		from pinterest
		where interest in
		(#{tag1},#{tag2},#{tag3},#{tag4},#{tag5})
		) as p
		group by pid
		having
		count(interest) >= #{cnt}
		)
        <!-- limit #{paging}, #{pcnt};  -->
		<!-- order by r.rnum desc-->
		) as b
        on a.pid = b.pid
        order by a.rnum desc;
	</select>

	<select id="selectSame" resultType="recruit"
		parameterType="taglist">
		select * from recruit
		where pid in (
		select pid
		from (
		select *
		from pinterest
		where interest in
		(#{tag1},#{tag2},#{tag3},#{tag4},#{tag5})
		) as p
		group by pid
		having
		count(interest) >= #{cnt}
		)
        <!-- limit #{paging}, #{pcnt};  -->
		

	</select>
	
	

	<select id="selectAddrAndTag" parameterType="addrandtag"
		resultType="recruit">
		select distinct a.* from 
		(select a.*, b.cnt, b.nickname from(		
		select pid,count(*) as cnt, nickname from userInfo, pmember 
        where pmember.userId = userInfo.id
        group by pid,nickname
        ) as b right join (
		        
		select r.rnum, r.pid, r.title, r.contents, r.endDate, 
		r.makeDay, r.changeDay, r.makeId, r.changeId,
		p.pjtName, p.pjtMemberCnt, p.pjtContent, p.location, p.pjtState, p.interest
		from recruit as r left join (
			select pjt.*, bb.interest from project as pjt left join 
			(SELECT pid, GROUP_CONCAT(interest) AS interest FROM pinterest group by pid
			) as bb
			on pjt.pid = bb.pid
		) as p
		on r.pid = p.pid
		) as a
		on b.pid = a.pid) as a right join (
		
		
		
		select r.rnum, r.pid, r.title, r.contents, r.endDate,
		r.makeDay, r.changeDay, r.makeId, r.changeId from recruit as r
		left
		join project as p
		on r.pid = p.pid
		where p.location like
		CONCAT('%',#{sido},'%')
		and p.location like CONCAT('%',#{gugun},'%')
		and p.location like CONCAT('%',#{dong},'%')
		and r.pid in (
		select pid
		from (
		select *
		from pinterest
		where interest in
		(#{tag1},#{tag2},#{tag3},#{tag4},#{tag5})
		) as p
		group by pid
		having
		count(interest) >= #{cnt}
		)
        <!-- limit #{paging}, #{pcnt};  -->
		<!-- order by r.rnum desc-->
		) as b
        on a.pid = b.pid
        order by a.rnum desc;

	</select>

	<select id="select" parameterType="int" resultType="recruit">
		select * from
		recruit
		where rnum=#{rnum}
	</select>

	<insert id="insert" parameterType="recruit">

		insert into recruit(pid,
		title, contents, endDate, makeDay, changeDay, makeId, changeId)
		select
		#{pid}, #{title}, #{contents},
		date_add(now(), interval 7 day),
		now(),
		now(),
		#{makeId}, #{changeId}
		where exists (select * from project
		where
		pid =
		#{pid})
		and exists (select * from userInfo where id =
		#{makeId})
		and exists
		(select * from userInfo where id = #{changeId})
		;

	</insert>

	<delete id="delete" parameterType="int">
		delete from recruit where
		rnum=#{rnum}
	</delete>

	<update id="update" parameterType="recruit">

		update recruit inner join
		userInfo
		on userInfo.id = recruit.changeId
		set title
		= #{title},
		contents
		= #{contents}, changeId =
		#{changeId}
		where (select
		count(*)
		from userInfo
		where id = #{changeId}) = 1
		and rnum = #{rnum}
		;

	</update>
</mapper>